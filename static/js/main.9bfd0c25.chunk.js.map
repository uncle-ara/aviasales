{"version":3,"sources":["components/Ticket/Ticket.module.scss","App.module.scss","components/Checkbox/Checkbox.module.scss","components/Filters/Filters.module.scss","components/Sort/Sort.module.scss","components/Filters/Filters.tsx","components/Checkbox/Checkbox.tsx","components/Sort/Sort.tsx","helpers.tsx","components/Ticket/Ticket.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","FilterType","Checkbox","label","value","onChange","className","styles","base","onClick","cx","checkbox","checkbox_selected","React","memo","BillType","elements","type","All","Direct","OneTransfer","TwoTransfer","ThreeTransfer","initCheckboxSelected","updateFilters","current","obj","result","key","Object","prototype","hasOwnProperty","call","setValues","Filters","filters","title","map","Cheap","text","Fast","Optimal","Sort","onSelect","selected","button","button_selected","padStart","len","symbol","str","needs","length","index","getTimeFromDate","date","hours","getHours","toString","mins","getMinutes","getTimeFromAndTo","from","duration","dateFrom","Date","dateTo","getTime","diclanite","words","num","Math","abs","Ticket","price","carrier","segments","header","toLocaleString","src","body","origin","destination","stops","row","column","trunc","join","validSegments","maxStops","calcTotalDuration","ticket","reduce","acc","segment","calcTotalStops","App","useState","billTypeSelected","setBillTypeSelected","ticketsCount","setTicketsCount","filtersSelected","setFiltersSelected","tickets","setTickets","useEffect","cache","localStorage","getItem","JSON","parse","now","e","console","warn","request","fetch","then","res","json","searchId","setItem","stringify","catch","logo","content","left","right","sort","filter","ticketA","ticketB","slice","more","x","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bfd0c25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Ticket_base__3If-5\",\"row\":\"Ticket_row__ZDAJM\",\"column\":\"Ticket_column__2ugUo\",\"header\":\"Ticket_header__Lo5AC\",\"price\":\"Ticket_price__2e9GY\",\"carrier\":\"Ticket_carrier__2RcdZ\",\"body\":\"Ticket_body__Z2R4w\",\"title\":\"Ticket_title__vHGBE\",\"value\":\"Ticket_value__1rnd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"App_base__2lbIl\",\"header\":\"App_header__uDacY\",\"price\":\"App_price__1dXm4\",\"logo\":\"App_logo__1R47W\",\"content\":\"App_content__25y52\",\"left\":\"App_left__2FLNk\",\"right\":\"App_right__9tkOM\",\"sorts\":\"App_sorts__vTADT\",\"tickets\":\"App_tickets__3af3J\",\"more\":\"App_more__OGcxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Checkbox_base__uGuAm\",\"checkbox\":\"Checkbox_checkbox__3aZIR\",\"checkbox_selected\":\"Checkbox_checkbox_selected__2jBIa\",\"label\":\"Checkbox_label__B-qDr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Filters_base__1_YXe\",\"title\":\"Filters_title__10TLX\",\"checkbox\":\"Filters_checkbox__3DCzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Sort_base__1lExt\",\"button\":\"Sort_button__1ChCe\",\"button_selected\":\"Sort_button_selected__3Vqwu\"};","import React, { useState } from \"react\";\nimport cx from \"classnames\";\n\nimport styles from \"./Filters.module.scss\";\nimport Checkbox from \"../Checkbox/\";\n\nexport enum FilterType {\n  All,\n  Direct,\n  OneTransfer,\n  TwoTransfer,\n  ThreeTransfer,\n}\n\nconst setValues = <T,>(obj: Record<string | number, T>, value: T) => {\n  let result = {} as Record<string | number, T>;\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      result[key] = value;\n    }\n  }\n  return result;\n};\n\nconst elements = [\n  { type: FilterType.All, label: \"Все\" },\n  { type: FilterType.Direct, label: \"Без пересадок\" },\n  { type: FilterType.OneTransfer, label: \"1 пересадка\" },\n  { type: FilterType.TwoTransfer, label: \"2 пересадки\" },\n  { type: FilterType.ThreeTransfer, label: \"3 пересадки\" },\n];\n\nexport const initCheckboxSelected = {\n  [FilterType.All]: true,\n  [FilterType.Direct]: true,\n  [FilterType.OneTransfer]: true,\n  [FilterType.TwoTransfer]: true,\n  [FilterType.ThreeTransfer]: true,\n};\n\nexport type Filters = typeof initCheckboxSelected;\n\nexport type Props = {\n  filters: Filters;\n  onChange: (filters: Filters) => void;\n};\n\nconst updateFilters = (current: Filters, type: FilterType, value: boolean) => {\n  if (type === FilterType.All) {\n    return setValues(current, value) as Filters;\n  }\n  return { ...current, [type]: value, [FilterType.All]: false };\n};\n\nconst Filters = ({ filters, onChange }: Props) => {\n  return (\n    <div className={styles.base}>\n      <div className={styles.title}>Количество пересадок</div>\n      {elements.map(({ type, label }) => (\n        <div key={type} className={styles.checkbox}>\n          <Checkbox\n            label={label}\n            value={filters[type]}\n            onChange={(value) => onChange(updateFilters(filters, type, value))}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default React.memo(Filters);\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Checkbox.module.scss\";\r\n\r\nexport type Props = {\r\n  label: string;\r\n  value: boolean;\r\n  onChange: (value: boolean) => void;\r\n};\r\n\r\nconst Checkbox = ({ label, value, onChange }: Props) => {\r\n  return (\r\n    <div className={styles.base} onClick={() => onChange(!value)}>\r\n      <div className={cx(styles.checkbox, value && styles.checkbox_selected)} />\r\n      <div className={styles.label}>{label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Checkbox);\r\n","import React from \"react\";\nimport cx from \"classnames\";\n\nimport styles from \"./Sort.module.scss\";\n\nexport enum BillType {\n  Cheap,\n  Fast,\n  Optimal,\n}\n\nexport type Props = {\n  onSelect: (type: BillType) => void;\n  selected?: BillType;\n};\n\nconst elements = [\n  { type: BillType.Cheap, text: \"Самый дешевый\" },\n  { type: BillType.Fast, text: \"Самый быстрый\" },\n  { type: BillType.Optimal, text: \"Оптимальный\" },\n];\n\nconst Sort = ({ onSelect, selected }: Props) => {\n  return (\n    <div className={styles.base}>\n      {elements.map(({ type, text }) => (\n        <button\n          key={type}\n          className={cx(\n            styles.button,\n            selected === type && styles.button_selected\n          )}\n          onClick={() => onSelect(type)}\n        >\n          {text}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default React.memo(Sort);\n","export const padStart = (len: number, symbol: string, str: string) => {\r\n  let needs = len - str.length;\r\n  if (needs < 1) {\r\n    return str;\r\n  }\r\n  let result = str;\r\n  for (let index = 0; index < needs; index++) {\r\n    result = symbol + result;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTimeFromDate = (date: Date) => {\r\n  const hours = padStart(2, \"0\", date.getHours().toString());\r\n  const mins = padStart(2, \"0\", date.getMinutes().toString());\r\n  return `${hours}:${mins}`;\r\n};\r\n\r\nexport const getTimeFromAndTo = (from: string, duration: number) => {\r\n  const dateFrom = new Date(from);\r\n  const dateTo = new Date(dateFrom.getTime() + duration * 60000);\r\n  return `${getTimeFromDate(dateFrom)} - ${getTimeFromDate(dateTo)}`;\r\n};\r\n\r\nexport const getTimeFromMins = (mins: number) => {\r\n  let hours = Math.trunc(mins / 60);\r\n  let minutes = mins % 60;\r\n  return hours + \"ч \" + minutes + \"м\";\r\n};\r\n\r\nexport const diclanite = (value: number, words: [string, string, string]) => {\r\n  value = Math.abs(value) % 100;\r\n  const num = value % 10;\r\n  if (value > 10 && value < 20) {\r\n    return words[2];\r\n  }\r\n  if (num > 1 && num < 5) {\r\n    return words[1];\r\n  }\r\n  if (num == 1) {\r\n    return words[0];\r\n  }\r\n  return words[2];\r\n};\r\n","import React from \"react\";\nimport { getTimeFromMins, getTimeFromAndTo, diclanite } from \"../../helpers\";\nimport styles from \"./Ticket.module.scss\";\n\nexport type Segment = {\n  origin: string;\n  destination: string;\n  date: string;\n  stops: string[];\n  duration: number;\n};\n\nexport type Props = {\n  price: number;\n  carrier: string;\n  segments: Segment[];\n};\n\nconst Ticket = ({ price, carrier, segments }: Props) => {\n  return (\n    <div className={styles.base}>\n      <div className={styles.header}>\n        <div className={styles.price}>{price.toLocaleString(\"ru\")} Р</div>\n        <div className={styles.carrier}>\n          <img src={`http://pics.avs.io/99/36/${carrier}.png`} />\n        </div>\n      </div>\n      <div className={styles.body}>\n        {segments.map(\n          ({ origin, destination, date, stops, duration }, index) => (\n            <div key={index} className={styles.row}>\n              <div className={styles.column}>\n                <div className={styles.title}>\n                  {origin}-{destination}\n                </div>\n                <div className={styles.value}>\n                  {getTimeFromAndTo(date, duration)}\n                </div>\n              </div>\n              <div className={styles.column}>\n                <div className={styles.title}>В пути</div>\n                <div className={styles.value}>{getTimeFromMins(duration)}</div>\n              </div>\n              <div className={styles.column}>\n                {stops.length === 0 ? (\n                  <div className={styles.title}>Без пересадок</div>\n                ) : (\n                  <>\n                    <div className={styles.title}>\n                      {stops.length}{\" \"}\n                      {diclanite(stops.length, [\n                        \"Пересадка\",\n                        \"Пересадки\",\n                        \"Пересадок\",\n                      ])}\n                    </div>\n                    <div className={styles.value}>{stops.join(\", \")}</div>\n                  </>\n                )}\n              </div>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Ticket;\n","import React, { useEffect, useState } from \"react\";\n\nimport Filters, {\n  FilterType,\n  initCheckboxSelected,\n} from \"./components/Filters\";\nimport Sort, { BillType } from \"./components/Sort\";\nimport Ticket from \"./components/Ticket\";\nimport { ResponseTickets, Segment, Ticket as TicketData } from \"./types\";\n\nimport styles from \"./App.module.scss\";\n\nconst validSegments = (segments: Segment[], maxStops: number) => {\n  for (const segment of segments) {\n    if (segment.stops.length > maxStops) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst calcTotalDuration = (ticket: TicketData) =>\n  ticket.segments.reduce((acc, segment) => acc + segment.duration, 0);\n\nconst calcTotalStops = (ticket: TicketData) =>\n  ticket.segments.reduce((acc, segment) => acc + segment.stops.length, 0);\n\nconst THERTY_MINS = 1000 * 60 * 30;\n\nconst App = React.memo(() => {\n  const [billTypeSelected, setBillTypeSelected] = useState<BillType>();\n  const [ticketsCount, setTicketsCount] = useState(5);\n  const [filtersSelected, setFiltersSelected] = useState(initCheckboxSelected);\n  const [tickets, setTickets] = useState<TicketData[]>([]);\n\n  useEffect(() => {\n    const cache = localStorage.getItem(\"ticketsCache\");\n    try {\n      const { tickets, date }: { tickets: TicketData[]; date: number } =\n        cache && JSON.parse(cache);\n      if (Date.now() - date < THERTY_MINS) {\n        return setTickets(tickets);\n      }\n    } catch (e) {\n      console.warn(\"Invalid cache\", e);\n    }\n\n    const request = () => {\n      fetch(`https://front-test.beta.aviasales.ru/search`)\n        .then((res) => res.json())\n        .then(({ searchId }: { searchId: string }) =>\n          fetch(\n            `https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`\n          )\n        )\n        .then((res) => res.json())\n        .then(({ tickets }: ResponseTickets) => {\n          localStorage.setItem(\n            \"ticketsCache\",\n            JSON.stringify({ tickets, date: Date.now() })\n          );\n          setTickets(tickets);\n        })\n        .catch(request);\n    };\n    request();\n  }, []);\n\n  const filterTicket = (ticket: TicketData) => {\n    if (filtersSelected[FilterType.All]) {\n      return true;\n    }\n\n    if (\n      filtersSelected[FilterType.OneTransfer] &&\n      validSegments(ticket.segments, 1)\n    ) {\n      return true;\n    }\n\n    if (\n      filtersSelected[FilterType.TwoTransfer] &&\n      validSegments(ticket.segments, 2)\n    ) {\n      return true;\n    }\n\n    if (\n      filtersSelected[FilterType.ThreeTransfer] &&\n      validSegments(ticket.segments, 3)\n    ) {\n      return true;\n    }\n\n    if (\n      filtersSelected[FilterType.Direct] &&\n      validSegments(ticket.segments, 0)\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const sortTickets = (ticketA: TicketData, ticketB: TicketData) => {\n    if (billTypeSelected === BillType.Cheap) {\n      return ticketA.price - ticketB.price;\n    }\n    if (billTypeSelected === BillType.Fast) {\n      return calcTotalDuration(ticketA) - calcTotalDuration(ticketB);\n    }\n    if (billTypeSelected === BillType.Optimal) {\n      return calcTotalStops(ticketA) - calcTotalStops(ticketB);\n    }\n    return 0;\n  };\n\n  const handleClickMore = () => {\n    setTicketsCount((x) => x + 5);\n  };\n\n  return (\n    <div className={styles.base}>\n      <div className={styles.header}>\n        <div className={styles.logo} />\n      </div>\n      <div className={styles.content}>\n        <div className={styles.left}>\n          <Filters filters={filtersSelected} onChange={setFiltersSelected} />\n        </div>\n        <div className={styles.right}>\n          <div className={styles.sort}>\n            <Sort onSelect={setBillTypeSelected} selected={billTypeSelected} />\n          </div>\n          <div className={styles.tickets}>\n            {tickets\n              .filter(filterTicket)\n              .sort(sortTickets)\n              .slice(0, ticketsCount)\n              .map(({ price, carrier, segments }) => (\n                <Ticket price={price} carrier={carrier} segments={segments} />\n              ))}\n          </div>\n          <button className={styles.more} onClick={handleClickMore}>\n            Показать еще 5 билетов!\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.module.scss\";\nimport \"normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}